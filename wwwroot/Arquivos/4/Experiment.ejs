<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Job Scrapper</title>
    <link rel="stylesheet" href="./css/style.css">
    <script src="https://code.jquery.com/jquery-3.4.1.js" integrity="sha256-WpOohJOqMqqyKL9FccASB9O0KwACQJpFTUBLTYOVvVU=" crossorigin="anonymous"></script>
</head>
<body>
    <div class="container">
        <div class="navbar">
            <div class="logo-container">
                <h1>Job Scrapper</h1>
            </div>
            <form id="search-form" class="search-container">
                <input id="keywordInput" type="text" class="keyword-input" placeholder="PALAVRA-CHAVE" autocomplete="off">
                <input id="localInput" type="text" class="local-input" placeholder="LOCAL" autocomplete="off">
                <button type="submit" class="search-button">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"/><path d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"/></svg>
                </button>
            </form>
        </div>
        <div class="vagas-container">
            <div class="alert">
                <p>Procure por <span>VAGAS</span> por meio de uma <span>palavra-chave</span> e/ou um <span>local</span></p>
            </div>
        </div>
    </div>
    <script>
        $( "#search-form" ).submit(event => {
            event.preventDefault();

            removeChildren();
            
            showLoading();

            getJks()
                .then(response => {
                    if(response != null){
                        let option = true;
                        let color = 'light';

                        response.map(job => {
                            if(option) {
                                color = 'light';
                                option = false;                       
                            }else {
                                option = true;
                                color = 'dark';
                            }
                            createJob(job,color);
                        }); 
                    }
                })
                .catch(err => console.error(err));
        });

        async function getJks() {
            const keyword = $('#keywordInput').val();
            const local = $('#localInput').val();
            const url = `/listJks?q=${keyword}&l=${local}`;

            const response = await fetch(url);
            const data = await response.json();
            
            await $('.loading-container').remove();

            let value = 0;
            const jobsArray = [];

            $('.vagas-container').append(
                `<div class="loading-bar-container">
                    <p>Coletando <span>vagas</span></p>
                    <progress id="progressId" value="0"></progress>
                    <div class="loading-information">
                        <p><span>${Object.keys(data).length}</span> vagas</p>
                        <p><span id="job-counter">0</span> de ${Object.keys(data).length}</p>
                    </div>
                </div>`
            )

            $('#progressId').attr('Max', Object.keys(data).length);
            
            for(jk of data){
                await getJob(jk)
                    .then(response => {
                        $('#progressId').val(value);
                        jobsArray.push(response);
                        value++;
                        $('#job-counter').text(value); 
                    })
                    .catch(err => console.error(err));
            }
            
            await $('.loading-bar-container').remove();
            if(jobsArray.length != 0){
                await $('.vagas-container').append(
                    `<div class="list-vagas-container">
                        <div class="list-vagas-header">
                            <p><span>${value}</span> vagas</p>
                        </div>
                        <div class="list-vagas-content"></div>
                    </div>`
                );
                return jobsArray;
            }

            await $('.vagas-container').append(
                `<div class="list-vagas-container">
                    <div class="list-vagas-content">
                        <p class="not-found-message"><span>NÃ£o</span> foram encontradas vagas</p
                    </div>
                </div>`
            );

            return null;
        }

        async function getJob(jk) {
            const url = `/getJk?jk=${jk}` ;

            const response = await fetch(url);
            const data = await response.json();

            return data;
        }

        function createJob(job, color) {
            const divJob = $('.list-vagas-content');

            
            let job_topics = '';

            (job.topics).map(el => {
                job_topics += el
                if(el != job.topics[(job.topics).length - 1]){
                    job_topics += ' - ';
                }
            });
            console.log(job_topics);

            divJob.append(
                `<div class="vaga ${color}">
                    <div class="vaga-header">
                        <div class="title">
                            <p>${job.title}<span>${job.company}</span></p>
                        </div>
                        <div class="subtitle">${job_topics}</div>
                    </div>
                    <div class="vaga-content">${job.content}</div>
                </div>`
            )
        }

        function showLoading() {
            $('.vagas-container').append(
                `<div class="loading-container">
                    <div class="pointer-container"> 
                        <div id="pointer-1" class="pointer"></div>
                        <div id="pointer-2" class="pointer"></div>
                        <div id="pointer-3" class="pointer"></div>
                    </div>
                </div>`
            )

            let pointer = 1;
            setInterval(() => {
                
                $('.pointer').width(10).height(10)

                $('#pointer-' + pointer).width(20).height(20)

                pointer++

                if(pointer > 3){
                    pointer = 1;
                }
            }, 300);
        }

        function removeChildren(){
            $('.alert').remove();
            $('.list-vagas-container').remove();
            
        }

        $(document).on('click','.vaga', function () {
            const vaga_content = $(this).children('.vaga-content');
            
            if(vaga_content.is(':visible')){
                vaga_content.hide();
            }else {
                vaga_content.show()
            }  
        });
        
    </script>
</body>
</html>